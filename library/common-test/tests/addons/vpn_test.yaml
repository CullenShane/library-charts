suite: addon vpn
templates:
  - common.yaml
tests:
  - it: addon enabled with configFile should pass
    set:
      addons:
        vpn:
          type: gluetun
          configFile: "/tmp/vpn.conf"
      workload:
        main:
          enabled: true
          primary: true
          type: Deployment
          podSpec:
            containers:
              main:
                enabled: true
                primary: true
    asserts:
      - hasDocuments:
          count: 1
      - documentIndex: &DeploymentDocument 1
        isKind:
          of: Deployment
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /vpn/vpn.conf
            name: vpnconfig
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.volumes
          content:
            name: vpnconfig
            hostPath:
              path: /vpn/vpn.conf
              type: File

  - it: addon enabled with managed secret should pass
    set:
      addons:
        vpn:
          type: gluetun
          config: "someconfig"
      workload:
        main:
          enabled: true
          primary: true
          type: Deployment
          podSpec:
            containers:
              main:
                enabled: true
                primary: true
    asserts:
      - hasDocuments:
          count: 2
      - documentIndex: &SecretDocument 0
        isKind:
          of: Secret
      - documentIndex: 2
        isKind:
          of: Service
      - documentIndex: &DeploymentDocument 1
        isKind:
          of: Deployment
      - documentIndex: *DeploymentDocument
        notEqual:
          path: spec.template.spec.containers[0].name
          value: vpn

  - it: tailscale addon enabled with authkey should pass
    set:
      addons:
        vpn:
          type: tailscale
          tailscale:
            authkey: something
      workload:
        main:
          enabled: true
          primary: true
          type: Deployment
          podSpec:
            containers:
              main:
                enabled: true
                primary: true
    asserts:
      - hasDocuments:
          count: 1
      - documentIndex: &DeploymentDocument 0
        isKind:
          of: Deployment
      - documentIndex: *DeploymentDocument
        notEqual:
          path: spec.template.spec.containers[0].name
          value: RELEASE-NAME-common-test-additional-tailscale
      - documentIndex: *DeploymentDocument
        equal:
          path: spec.template.spec.containers[1].name
          value: RELEASE-NAME-common-test-additional-tailscale
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].env
          content:
            name: TS_KUBE_SECRET
            value: ""
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].env
          content:
            name: TS_SOCKET
            value: /var/run/tailscale/tailscaled.sock
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].env
          content:
            name: TS_STATE_DIR
            value: /var/lib/tailscale
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].env
          content:
            name: TS_AUTH_ONCE
            value: "true"
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].env
          content:
            name: TS_USERSPACE
            value: "true"
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].env
          content:
            name: TS_ACCEPT_DNS
            value: "false"
