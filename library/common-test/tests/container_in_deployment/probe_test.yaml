suite: container in deployment probe test
templates:
  - common.yaml
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: Deployment
      - isSubset:
          path: spec.template.spec.containers[0]
          content:
            livenessProbe:
              httpGet:
                path: /
                scheme: HTTP
                port: 65535
              initialDelaySeconds: 10
              failureThreshold: 5
              timeoutSeconds: 5
              periodSeconds: 10
            readinessProbe:
              httpGet:
                path: /
                scheme: HTTP
                port: 65535
              initialDelaySeconds: 10
              failureThreshold: 5
              timeoutSeconds: 5
              periodSeconds: 10
            startupProbe:
              httpGet:
                path: /
                scheme: HTTP
                port: 65535
              initialDelaySeconds: 10
              failureThreshold: 60
              timeoutSeconds: 2
              periodSeconds: 5

  - it: should fail with wrong probe name
    set:
      probes:
        invalid_probe_name:
    asserts:
      - failedTemplate:
          errorMessage: Invalid probe name (invalid_probe_name). Valid options are (liveness, readiness, startup)

  - it: should fail without commands on exec probe
    set:
      probes:
        liveness:
          type: EXEC
    asserts:
      - failedTemplate:
          errorMessage: No commands were defined for EXEC type on probe (liveness)

  - it: should fail without path on http(s) liveness probe
    set:
      probes:
        liveness:
          path: ""
    asserts:
      - failedTemplate:
          errorMessage: <path> must be defined for HTTP/HTTPS probe types in probe (liveness)

  - it: should fail without path on http(s) readiness probe
    set:
      probes:
        readiness:
          path: ""
    asserts:
      - failedTemplate:
          errorMessage: <path> must be defined for HTTP/HTTPS probe types in probe (readiness)

  - it: should fail without path on http(s) startup probe
    set:
      probes:
        startup:
          path: ""
    asserts:
      - failedTemplate:
          errorMessage: <path> must be defined for HTTP/HTTPS probe types in probe (startup)

  - it: should fail without initialDelaySeconds on non-custom probes
    set:
      probes:
        liveness:
          spec:
            initialDelaySeconds:
    asserts:
      - failedTemplate:
          errorMessage: <initialDelaySeconds> cannot be empty in probe (liveness)

  - it: should fail without failureThreshold on non-custom probes
    set:
      probes:
        liveness:
          spec:
            failureThreshold:
    asserts:
      - failedTemplate:
          errorMessage: <failureThreshold> cannot be empty in probe (liveness)

  - it: should fail without timeoutSeconds on non-custom probes
    set:
      probes:
        liveness:
          spec:
            timeoutSeconds:
    asserts:
      - failedTemplate:
          errorMessage: <timeoutSeconds> cannot be empty in probe (liveness)

  - it: should fail without periodSeconds on non-custom probes
    set:
      probes:
        liveness:
          spec:
            periodSeconds:
    asserts:
      - failedTemplate:
          errorMessage: <periodSeconds> cannot be empty in probe (liveness)

  - it: should fail when non-custom probe is defined in a disabled service
    set:
      service:
        main:
          enabled: false
      probes:
        liveness:
          spec:
            periodSeconds:
    asserts:
      - failedTemplate:
          errorMessage: Only custom probes are allowed when service is disabled (liveness)

  - it: should fail with invalid probe type
    set:
      probes:
        liveness:
          type: not_valid_type
    asserts:
      - failedTemplate:
          errorMessage: Invalid probe type (not_valid_type) on probe (liveness)

  - it: should fail with httpHeader value is defined as list
    set:
      probes:
        liveness:
          type: HTTP
          httpHeaders:
            some_header:
              - list_value
              - list_value2
    asserts:
      - failedTemplate:
          errorMessage: Lists or Dicts are not allowed in httpHeaders on probe (liveness)

  - it: should fail with httpHeader value is defined as dict
    set:
      probes:
        liveness:
          type: HTTP
          httpHeaders:
            some_header:
              some_key:
    asserts:
      - failedTemplate:
          errorMessage: Lists or Dicts are not allowed in httpHeaders on probe (liveness)

  - it: should pass with with custom defined liveness probe
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          custom: true
          spec:
            httpGet:
              path: /path
              scheme: HTTPS
              port: 1234
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /path
              scheme: HTTPS
              port: 1234
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15

  - it: should pass with with custom defined readiness probe
    documentIndex: *deploymentDoc
    set:
      probes:
        readiness:
          custom: true
          spec:
            httpGet:
              path: /path
              scheme: HTTPS
              port: 1234
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe
          value:
            httpGet:
              path: /path
              scheme: HTTPS
              port: 1234
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15

  - it: should pass with with custom defined startup probe
    documentIndex: *deploymentDoc
    set:
      probes:
        startup:
          custom: true
          spec:
            httpGet:
              path: /path
              scheme: HTTPS
              port: 1234
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe
          value:
            httpGet:
              path: /path
              scheme: HTTPS
              port: 1234
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15

  - it: should pass with with probe type AUTO and service HTTP
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              protocol: HTTP
      probes:
        liveness:
          type: AUTO
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTP
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type AUTO and service HTTPS
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              protocol: HTTPS
      probes:
        liveness:
          type: AUTO
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTPS
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type AUTO and service TCP
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              protocol: TCP
      probes:
        liveness:
          type: AUTO
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            tcpSocket:
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type TCP and service TCP
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          type: TCP
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            tcpSocket:
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type AUTO and service HTTP with custom path
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              protocol: HTTP
      probes:
        liveness:
          type: AUTO
          path: /some_path
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /some_path
              scheme: HTTP
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type AUTO and service HTTP with custom port
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              protocol: HTTP
      probes:
        liveness:
          type: AUTO
          port: 1234
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTP
              port: 1234
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type AUTO and service HTTP with httpHeaders
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              protocol: HTTP
      probes:
        liveness:
          type: AUTO
          httpHeaders:
            some_header: 1234
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTP
              port: 65535
              httpHeaders:
                - name: some_header
                  value: 1234
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type HTTP with httpHeaders set from tpl
    documentIndex: *deploymentDoc
    set:
      some_header_value: 1234
      probes:
        liveness:
          type: HTTP
          httpHeaders:
            some_header: "{{ .Values.some_header_value }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTP
              port: 65535
              httpHeaders:
                - name: some_header
                  value: 1234
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type HTTP with multiple httpHeaders set from tpl
    documentIndex: *deploymentDoc
    set:
      some_header_value: 1234
      some_header_value2: some_value
      probes:
        liveness:
          type: HTTP
          httpHeaders:
            some_header: "{{ .Values.some_header_value }}"
            some_header2: "{{ .Values.some_header_value2 }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTP
              port: 65535
              httpHeaders:
                - name: some_header
                  value: 1234
                - name: some_header2
                  value: some_value
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type HTTP with path set from tpl
    documentIndex: *deploymentDoc
    set:
      some_path: /ping
      probes:
        liveness:
          type: HTTP
          path: "{{ .Values.some_path }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /ping
              scheme: HTTP
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type HTTP with port set from tpl
    documentIndex: *deploymentDoc
    set:
      some_port: 1234
      probes:
        liveness:
          type: HTTP
          port: "{{ .Values.some_port }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /
              scheme: HTTP
              port: 1234
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type TCP with port set from tpl
    documentIndex: *deploymentDoc
    set:
      some_port: 1234
      probes:
        liveness:
          type: TCP
          port: "{{ .Values.some_port }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            tcpSocket:
              port: 1234
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with changed times
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          type: TCP
          spec:
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            tcpSocket:
              port: 65535
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15

  - it: should pass with with probe type GRPC
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          type: GRPC
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            grpc:
              port: 65535
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type exec with multiline command
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          type: EXEC
          command:
            - /bin/bash
            - -c
            - |
              echo "probe!"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  echo "probe!"
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type exec with multiline command from tpl
    documentIndex: *deploymentDoc
    set:
      some_msg: probe!
      probes:
        liveness:
          type: EXEC
          command:
            - /bin/bash
            - -c
            - |
              echo "{{ .Values.some_msg }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  echo "probe!"
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type exec single command
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          type: EXEC
          command: env
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            exec:
              command:
                - env
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type exec single command from tpl
    documentIndex: *deploymentDoc
    set:
      some_command: env
      probes:
        liveness:
          type: EXEC
          command: "{{ .Values.some_command }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            exec:
              command:
                - env
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10

  - it: should pass with with probe type exec single command and custom timings
    documentIndex: *deploymentDoc
    set:
      probes:
        liveness:
          type: EXEC
          command: env
          spec:
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            exec:
              command:
                - env
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 10
            periodSeconds: 15
