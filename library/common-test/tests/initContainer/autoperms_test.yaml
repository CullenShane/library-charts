suite: auto perms test
templates:
  - common.yaml
tests:
  - it: should render permissions job
    set:
      workload:
        workload-name:
          enabled: true
          primary: true
          type: Deployment
          podSpec: {}
      persistence:
        test1:
          enabled: true
          type: hostPath
          autoPermissions:
            chown: true
            chmod: 770
            recursive: true
          mountPath: /test1
          hostPath: /testhost1
        test2:
          enabled: true
          type: hostPath
          autoPermissions:
            chown: true
            chmod: 770
            recursive: false
          mountPath: /test2
          hostPath: /testhost2
        test3:
          enabled: true
          type: hostPath
          autoPermissions:
            chmod: 770
          mountPath: /test3
          hostPath: /testhost3
        test4:
          enabled: true
          type: hostPath
          autoPermissions:
            chown: true
          mountPath: /test4
          hostPath: /testhost4
        # Should not appear
        test5:
          enabled: true
          type: hostPath
          mountPath: /test5
          hostPath: /testhost5
    asserts:
      - documentIndex: &jobDoc 1
        isKind:
          of: Job
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            runAsUser: 0
            runAsGroup: 568
            runAsNonRoot: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
                - FOWNER
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.volumes
          value:
            - name: test1
              hostPath:
                path: /testhost1
            - name: test2
              hostPath:
                path: /testhost2
            - name: test3
              hostPath:
                path: /testhost3
            - name: test4
              hostPath:
                path: /testhost4
            - name: tmp-data
              emptyDir: {}
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - name: test1
              mountPath: /mounts/test1
            - name: test2
              mountPath: /mounts/test2
            - name: test3
              mountPath: /mounts/test3
            - name: test4
              mountPath: /mounts/test4
            - name: tmp-data
              mountPath: /tmp
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.containers[0].command
          value:
            - /bin/sh
            - -c
            - |
              /bin/sh <<'EOF'
              touch /tmp/healthy
              echo "Automatically correcting ownership and permissions..."
              echo "Automatically correcting permissions for /test1..."
              echo "Permissions before: [$(stat -c "%a" /mounts/test1)]"
              chmod -R 770 /mounts/test1 || echo "Failed setting permissions using chmod..."
              echo "Permissions after: [$(stat -c "%a" /mounts/test1)]"
              echo ""
              echo "Automatically correcting ownership for /test1..."
              echo "Ownership before: [$(stat -c "%u:%g" /mounts/test1)]"
              chown -R -f :568 /mounts/test1 || echo "Failed setting ownership using chown..."
              echo "Ownership after: [$(stat -c "%u:%g" /mounts/test1)]"
              echo ""
              echo "Automatically correcting permissions for /test2..."
              echo "Permissions before: [$(stat -c "%a" /mounts/test2)]"
              chmod  770 /mounts/test2 || echo "Failed setting permissions using chmod..."
              echo "Permissions after: [$(stat -c "%a" /mounts/test2)]"
              echo ""
              echo "Automatically correcting ownership for /test2..."
              echo "Ownership before: [$(stat -c "%u:%g" /mounts/test2)]"
              chown  -f :568 /mounts/test2 || echo "Failed setting ownership using chown..."
              echo "Ownership after: [$(stat -c "%u:%g" /mounts/test2)]"
              echo ""
              echo "Automatically correcting permissions for /test3..."
              echo "Permissions before: [$(stat -c "%a" /mounts/test3)]"
              chmod  770 /mounts/test3 || echo "Failed setting permissions using chmod..."
              echo "Permissions after: [$(stat -c "%a" /mounts/test3)]"
              echo ""
              echo "Automatically correcting ownership for /test4..."
              echo "Ownership before: [$(stat -c "%u:%g" /mounts/test4)]"
              chown  -f :568 /mounts/test4 || echo "Failed setting ownership using chown..."
              echo "Ownership after: [$(stat -c "%u:%g" /mounts/test4)]"
              echo ""
              EOF

  - it: should render permissions job in ixChartContext
    set:
      workload:
        workload-name:
          enabled: true
          primary: true
          type: Deployment
          podSpec: {}
      ixChartContext:
        some: context
      persistence:
        test1:
          enabled: true
          type: hostPath
          autoPermissions:
            chown: true
            chmod: 770
            recursive: true
          mountPath: /test1
          hostPath: /testhost1
        test2:
          enabled: true
          type: hostPath
          autoPermissions:
            chown: true
            chmod: 770
            recursive: false
          mountPath: /test2
          hostPath: /testhost2
        test3:
          enabled: true
          type: hostPath
          autoPermissions:
            chmod: 770
          mountPath: /test3
          hostPath: /testhost3
        test4:
          enabled: true
          type: hostPath
          autoPermissions:
            chown: true
          mountPath: /test4
          hostPath: /testhost4
        # Should not appear
        test5:
          enabled: true
          type: hostPath
          mountPath: /test5
          hostPath: /testhost5
    asserts:
      - documentIndex: *jobDoc
        isKind:
          of: Job
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            runAsUser: 0
            runAsGroup: 568
            runAsNonRoot: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
                - FOWNER
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.volumes
          value:
            - name: test1
              hostPath:
                path: /testhost1
            - name: test2
              hostPath:
                path: /testhost2
            - name: test3
              hostPath:
                path: /testhost3
            - name: test4
              hostPath:
                path: /testhost4
            - name: tmp-data
              emptyDir: {}
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - name: test1
              mountPath: /mounts/test1
            - name: test2
              mountPath: /mounts/test2
            - name: test3
              mountPath: /mounts/test3
            - name: test4
              mountPath: /mounts/test4
            - name: tmp-data
              mountPath: /tmp
      - documentIndex: *jobDoc
        equal:
          path: spec.template.spec.containers[0].command
          value:
            - /bin/sh
            - -c
            - |
              /bin/sh <<'EOF'
              touch /tmp/healthy
              echo "Automatically correcting ownership and permissions..."
              echo "Automatically correcting permissions for /test1..."
              echo "Permissions before: [$(stat -c "%a" /mounts/test1)]"
              chmod -R 770 /mounts/test1 || echo "Failed setting permissions using chmod..."
              echo "Permissions after: [$(stat -c "%a" /mounts/test1)]"
              echo ""
              echo "Automatically correcting ownership for /test1..."
              echo "Ownership before: [$(stat -c "%u:%g" /mounts/test1)]"
              /usr/sbin/nfs4xdr_winacl -a chown -G 568 -r -c "/mounts/test1" -p "/mounts/test1" || echo "Failed setting ownership using winacl..."
              echo "Ownership after: [$(stat -c "%u:%g" /mounts/test1)]"
              echo ""
              echo "Automatically correcting permissions for /test2..."
              echo "Permissions before: [$(stat -c "%a" /mounts/test2)]"
              chmod  770 /mounts/test2 || echo "Failed setting permissions using chmod..."
              echo "Permissions after: [$(stat -c "%a" /mounts/test2)]"
              echo ""
              echo "Automatically correcting ownership for /test2..."
              echo "Ownership before: [$(stat -c "%u:%g" /mounts/test2)]"
              /usr/sbin/nfs4xdr_winacl -a chown -G 568  -c "/mounts/test2" -p "/mounts/test2" || echo "Failed setting ownership using winacl..."
              echo "Ownership after: [$(stat -c "%u:%g" /mounts/test2)]"
              echo ""
              echo "Automatically correcting permissions for /test3..."
              echo "Permissions before: [$(stat -c "%a" /mounts/test3)]"
              chmod  770 /mounts/test3 || echo "Failed setting permissions using chmod..."
              echo "Permissions after: [$(stat -c "%a" /mounts/test3)]"
              echo ""
              echo "Automatically correcting ownership for /test4..."
              echo "Ownership before: [$(stat -c "%u:%g" /mounts/test4)]"
              /usr/sbin/nfs4xdr_winacl -a chown -G 568  -c "/mounts/test4" -p "/mounts/test4" || echo "Failed setting ownership using winacl..."
              echo "Ownership after: [$(stat -c "%u:%g" /mounts/test4)]"
              echo ""
              EOF

# Failures
  - it: should fail trying to set ownership on non hostPath
    set:
      workload:
        workload-name:
          enabled: true
          primary: true
          type: Deployment
          podSpec: {}
      persistence:
        test:
          enabled: true
          type: pvc
          autoPermissions:
            chown: true
    asserts:
      - failedTemplate:
          errorMessage: Auto Permissions - You can only change permissions/ownership automatically on host path type

  - it: should fail trying to set permissions on non hostPath
    set:
      workload:
        workload-name:
          enabled: true
          primary: true
          type: Deployment
          podSpec: {}
      persistence:
        test:
          enabled: true
          type: pvc
          autoPermissions:
            chmod: 770
    asserts:
      - failedTemplate:
          errorMessage: Auto Permissions - You can only change permissions/ownership automatically on host path type
