
suite: rbac test
templates:
  - common.yaml
chart:
  appVersion: &appVer v1.2.3
release:
  namespace: &ns some_name_space
tests:
  - it: should pass with default values
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment

  - it: should pass with rbac account enabled (Role)
    documentIndex: &roleDoc 0
    set:
      rbac:
        main:
          enabled: true
    asserts:
      - isKind:
          of: Role
      - isAPIVersion:
          of: rbac.authorization.k8s.io/v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.namespace
          value: *ns

  - it: should pass with rbac account enabled (RoleBinding)
    documentIndex: &roleBindingDoc 1
    set:
      rbac:
        main:
          enabled: true
    asserts:
      - isKind:
          of: RoleBinding
      - isAPIVersion:
          of: rbac.authorization.k8s.io/v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.namespace
          value: *ns

  - it: should pass with rbac account enabled (ClusterRole)
    documentIndex: &roleDoc 0
    set:
      rbac:
        main:
          enabled: true
          clusterWide: true
    asserts:
      - isKind:
          of: ClusterRole
      - isAPIVersion:
          of: rbac.authorization.k8s.io/v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test

  - it: should pass with rbac account enabled (ClusterRoleBinding)
    documentIndex: &roleBindingDoc 1
    set:
      rbac:
        main:
          enabled: true
          clusterWide: true
    asserts:
      - isKind:
          of: ClusterRoleBinding
      - isAPIVersion:
          of: rbac.authorization.k8s.io/v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test

  - it: should pass with primary service account enabled and nameOverride defined (Role)
    documentIndex: *roleDoc
    set:
      rbac:
        main:
          enabled: true
          nameOverride: some-name
    asserts:
      - isKind:
          of: Role
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with primary service account enabled and nameOverride defined (RoleBinding)
    documentIndex: *roleBindingDoc
    set:
      rbac:
        main:
          enabled: true
          nameOverride: some-name
    asserts:
      - isKind:
          of: RoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with primary service account enabled and nameOverride defined (ClusterRole)
    documentIndex: *roleDoc
    set:
      rbac:
        main:
          enabled: true
          nameOverride: some-name
          clusterWide: true
    asserts:
      - isKind:
          of: ClusterRole
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with primary service account enabled and nameOverride defined (ClusterRoleBinding)
    documentIndex: *roleBindingDoc
    set:
      rbac:
        main:
          enabled: true
          nameOverride: some-name
          clusterWide: true
    asserts:
      - isKind:
          of: ClusterRoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with primary service account enabled annotations and labels added (Role)
    documentIndex: *roleDoc
    set:
      rbac:
        main:
          enabled: true
          annotations:
            key1: value1
            key2: value2
          labels:
            key3: value3
            key4: value4
    asserts:
      - isKind:
          of: Role
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4

  - it: should pass with primary service account enabled annotations and labels added (RoleBinding)
    documentIndex: *roleBindingDoc
    set:
      rbac:
        main:
          enabled: true
          annotations:
            key1: value1
            key2: value2
          labels:
            key3: value3
            key4: value4
    asserts:
      - isKind:
          of: RoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4

  - it: should pass with primary service account enabled annotations and labels added (ClusterRole)
    documentIndex: *roleDoc
    set:
      rbac:
        main:
          enabled: true
          clusterWide: true
          annotations:
            key1: value1
            key2: value2
          labels:
            key3: value3
            key4: value4
    asserts:
      - isKind:
          of: ClusterRole
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4

  - it: should pass with primary service account enabled annotations and labels added (ClusterRoleBinding)
    documentIndex: *roleBindingDoc
    set:
      rbac:
        main:
          enabled: true
          clusterWide: true
          annotations:
            key1: value1
            key2: value2
          labels:
            key3: value3
            key4: value4
    asserts:
      - isKind:
          of: ClusterRoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4
###
  - it: should pass with primary service account enabled annotations and labels added from tpl (Role)
    documentIndex: *roleDoc
    set:
      k1: value1
      k2: value2
      k3: value3
      k4: value4
      rbac:
        main:
          enabled: true
          annotations:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
          labels:
            key3: "{{ .Values.k3 }}"
            key4: "{{ .Values.k4 }}"
    asserts:
      - isKind:
          of: Role
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4

  - it: should pass with primary service account enabled annotations and labels added from tpl (RoleBinding)
    documentIndex: *roleBindingDoc
    set:
      k1: value1
      k2: value2
      k3: value3
      k4: value4
      rbac:
        main:
          enabled: true
          annotations:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
          labels:
            key3: "{{ .Values.k3 }}"
            key4: "{{ .Values.k4 }}"
    asserts:
      - isKind:
          of: RoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4

  - it: should pass with primary service account enabled annotations and labels added (ClusterRole)
    documentIndex: *roleDoc
    set:
      k1: value1
      k2: value2
      k3: value3
      k4: value4
      rbac:
        main:
          enabled: true
          clusterWide: true
          annotations:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
          labels:
            key3: "{{ .Values.k3 }}"
            key4: "{{ .Values.k4 }}"
    asserts:
      - isKind:
          of: ClusterRole
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4

  - it: should pass with primary service account enabled annotations and labels added (ClusterRoleBinding)
    documentIndex: *roleBindingDoc
    set:
      k1: value1
      k2: value2
      k3: value3
      k4: value4
      rbac:
        main:
          enabled: true
          clusterWide: true
          annotations:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
          labels:
            key3: "{{ .Values.k3 }}"
            key4: "{{ .Values.k4 }}"
    asserts:
      - isKind:
          of: ClusterRoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test
      - equal:
          path: metadata.annotations
          value:
            key1: value1
            key2: value2
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            key3: value3
            key4: value4


  - it: should pass with non-primary service account enabled and nameOverride defined (Role - main)
    documentIndex: *roleDoc
    set:
      rbac:
        main:
          enabled: true
          primary: true
        other:
          enabled: true
          primary: false
          nameOverride: some-name
    asserts:
      - isKind:
          of: Role
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test

  - it: should pass with non-primary service account enabled and nameOverride defined (RoleBinding - main)
    documentIndex: *roleBindingDoc
    set:
      rbac:
        main:
          enabled: true
          primary: true
        other:
          enabled: true
          primary: false
          nameOverride: some-name
    asserts:
      - isKind:
          of: RoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test

  - it: should pass with non-primary service account enabled and nameOverride defined (Role - main)
    documentIndex: &otherRoleDoc 2
    set:
      rbac:
        main:
          enabled: true
          primary: true
        other:
          enabled: true
          primary: false
          nameOverride: some-name
    asserts:
      - isKind:
          of: Role
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with non-primary service account enabled and nameOverride defined (RoleBinding - other)
    documentIndex: &otherRoleBindingDoc 3
    set:
      rbac:
        main:
          enabled: true
          primary: true
        other:
          enabled: true
          primary: false
          nameOverride: some-name
    asserts:
      - isKind:
          of: RoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with non-primary service account enabled and nameOverride defined (ClusterRole - other)
    documentIndex: &otherRoleDoc 2
    set:
      rbac:
        main:
          enabled: true
          primary: true
        other:
          enabled: true
          primary: false
          clusterWide: true
          nameOverride: some-name
    asserts:
      - isKind:
          of: ClusterRole
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with non-primary service account enabled and nameOverride defined (ClusterRoleBinding - other)
    documentIndex: &otherRoleBindingDoc 3
    set:
      rbac:
        main:
          enabled: true
          primary: true
        other:
          enabled: true
          primary: false
          clusterWide: true
          nameOverride: some-name
    asserts:
      - isKind:
          of: ClusterRoleBinding
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name
