global:
  # -- Sets an override for the suffix of the full name (Applies to current chart and all sub-charts)
  nameOverride: ""
  # -- Sets additional global annotations. Helm templates can be used.
  annotations: {}
  # -- Set additional global labels. Helm templates can be used.
  labels: {}

# -- Sets an override for the suffix of the full name (Applies to current chart only)
nameOverride: ""

# -- Set annotations on the pod. Helm templates can be used.
podAnnotations: {}

# -- Set labels on the pod. Helm templates can be used.
podLabels: {}

ixExternalInterfacesConfigurationNames: []
  # - interface1
  # - interface2

image:
  # -- Image repository
  repository:
  # -- Image tag
  tag:
  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- Override the command(s) for the default container
command: []

# -- Override the args for the default container
args: []

# -- Add args in addition to the arguments set by default.
# Primarily for the SCALE GUI
extraArgs: []

# -- Determines whether containers in a pod runs with TTY enabled.
tty: false

# -- Determines whether containers in a pod runs with stdin enabled.
stdin: false

# -- Configure the Security Context for the Pod
podSecurityContext:
  runAsUser: 568
  runAsGroup: 568
  fsGroup: 568
  supplementalGroups: []
  fsGroupChangePolicy: OnRootMismatch

# -- Configure the Security Context for the main container
securityContext:
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  capabilities:
    drop: []
    add: []

# -- Configure the lifecycle for the main container
lifecycle: {}

termination:
  # -- Configure the path at which the file to which the main container's termination message will be written.
  # [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1)]
  messagePath:
  # -- Indicate how the main container's termination message should be populated.
  # Valid options are `File` and `FallbackToLogsOnError`.
  # [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1)]
  messagePolicy:
  # -- Duration in seconds the pod needs to terminate gracefully
  # [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle)]
  gracePeriodSeconds: 10

# -- Used to add SCALE GPU configuration
scaleGPU:

# -- Set specific NVIDIA Capabilities
nvidiaCaps:
  - all

# -- Injects some envs based on conditions that 99% of containers use
# See "ix.v1.common.container.fixedEnvs" for more info.
injectFixedEnvs: true

# -- Set Container Timezone
TZ: UTC

# -- Set the Process User ID (PUID) env-var separately
security:
  PUID: 568
  UMASK: 002

# -- Main environment variables. Helm Template enabled.
# Syntax options:
# A) TZ: UTC
# B) ENV_VAR: "{{ .Release.Name }}"
# C) ENV_VAR:
#      configMapKeyRef | secretKeyRef:
#        name: object-name | "{{ .Values.objectName }}"
#        key: key-name | "{{ .Values.some_key }}"
#        optional: false (ony with secretKeyRef)
env: {}

controller:
  # -- Enable the controller.
  enabled: true
  # -- Set the controller type.
  # Valid options are: deployment | daemonset | statefulset
  type: deployment
  # -- Set labels on the deployment/statefulset/daemonset. Helm templates can be used.
  labels: {}
  # -- Set  annotations on the deployment/statefulset/daemonset. Helm templates can be used.
  annotations: {}
  # -- Revision history limit
  revisionHistoryLimit: 3
  # -- Number of desired pods
  replicas: 1
  # -- Set the controller upgrade strategy
  # For Deployments, valid values are Recreate (default) and RollingUpdate.
  # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
  # DaemonSets ignore this.
  strategy: ""
  # -- Set rollingUpdate strategies
  rollingUpdate:
    # -- Set deployment RollingUpdate max unavailable
    unavailable:
    # -- Set deployment RollingUpdate max surge
    surge:
    # -- Set statefulset RollingUpdate partition
    partition:

# -- Configure the services for the chart here.
# Additional services can be added by adding a dictionary key similar to the 'main' service.
# @default -- See below
service:
  main:
    # -- Enables or disables the service
    enabled: true
    # -- Configure the Service port information here.
    # Additional ports can be added by adding a dictionary key similar to the 'main' port.
    # @default -- See below
    ports:
      main:
        # -- Enables or disables the port
        enabled: true
        # -- The port number (Default port is required if enabled: true)
        port:
        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTPS and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP
        # -- Specify a service targetPort if you wish to differ the service port from the application port.
        # If `targetPort` is specified, this port number is used in the container definition instead of
        # the `port` value. Therefore named ports are not supported for this field.
        targetPort:
        # -- Specify the nodePort value NodePort service types.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
        nodePort:

# -- Configure persistence for the chart here.
# Additional items can be added by adding a dictionary key similar to the 'pvc-example' key.
# @default -- See below
persistence:
  # TODO: Move examples to documentation instead of here
  pvc-example:
    # -- Enables or disables the persistence item
    enabled: false
    # -- Sets the persistence type
    # Valid options are: pvc | emptyDir | secret | configMap | hostPath | custom
    type: pvc
    # -- Sets an override for the suffix of this volume
    nameOverride: ""
    annotationsList: []
    # - name: somename
    #   value: somevalue
    # -- Add annotations to PVC object
    annotations: {}
    # -- If you want to reuse an existing claim, the name of the existing PVC can be passed here.
    existingClaim: ""
    # -- force the complete PVC name
    # Will not add any prefix or suffix
    forceName: ""
  # -- Example of a hostPath mount
  # [[ref]]https://kubernetes.io/docs/concepts/storage/volumes/#hostpath)
  # @default -- See below
  host-dev:
    enabled: false
    type: hostPath
    # -- Which path on the host should be mounted.
    hostPath: /dev
    # -- Automatic set permissions using chown and chmod
    setPermissions: false
    # -- Where to mount the path in the main container.
    # Defaults to the value of `hostPath`
    mountPath: # /myDev
    # -- Specifying a hostPathType adds a check before trying to mount the path.
    # See Kubernetes documentation for options.
    hostPathType: ""
    # -- Specify if the path should be mounted read-only.
    readOnly: true

  # -- Example of a configmap mount
  # @default -- See below
  configmap-example:
    enabled: false
    type: configMap
    # -- Specify the name of the configmap object to be mounted. Helm templates can be used.
    objectName: myconfig-map
    # -- Where to mount the volume in the main container.
    # Defaults to `/<name_of_the_volume>`,
    # setting to '-' creates the volume but disables the volumeMount.
    mountPath:  # /custom-mount
    # -- Specify if the volume should be mounted read-only.
    readOnly: false

  # -- Example of a secret mount
  # @default -- See below
  secret-example:
    enabled: false
    type: secret
    # -- Specify the name of the secret object to be mounted. Helm templates can be used.
    objectName: mysecret
    # -- Where to mount the volume in the main container.
    # Defaults to `/<name_of_the_volume>`,
    # setting to '-' creates the volume but disables the volumeMount.
    mountPath: # /custom-mount
    # -- Specify if the volume should be mounted read-only.
    readOnly: false
    # -- define the default mount mode for the secret
    defaultMode: 0644
    # -- Define the secret items to be mounted
    items:
      - key: username
        path: my-group/my-username

  # -- Example of a nfs mount
  # @default -- See below
  nfs-example:
    enabled: false
    type: nfs
    # -- Specify the name of the secret object to be mounted
    server: 192.168.10.10
    # -- define the default mount path on the nfs server
    path: "/somepath"
    # -- Where to mount the volume in the main container.
    # Defaults to `/<name_of_the_volume>`,
    # setting to '-' creates the volume but disables the volumeMount.
    mountPath:  # /custom-mount
    # -- Specify if the volume should be mounted read-only.
    readOnly: false

  # -- Create an emptyDir volume to for /dev/shm
  # [[ref]]https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
  # @default -- See below
  shm:
    # TODO: discuss if we enable it by default
    enabled: false
    type: emptyDir
    mountPath: /dev/shm
    # -- Set the medium to "Memory" to mount a tmpfs (RAM-backed filesystem) instead
    # of the storage medium that backs the node.
    medium: Memory
    # -- If the `SizeMemoryBackedVolumes` feature gate is enabled, you can
    # specify a size for memory backed volumes.
    sizeLimit: # 1Gi

  # -- Create an emptyDir volume to share between all containers for temporary storage
  # @default -- See below
  temp:
    # TODO: discuss if we enable it by default
    enabled: false
    type: emptyDir
    mountPath: /tmp
    # -- Set the medium to "Memory" to mount a tmpfs (RAM-backed filesystem) instead
    # of the storage medium that backs the node.
    medium:  # Memory
    # -- If the `SizeMemoryBackedVolumes` feature gate is enabled, you can
    # specify a size for memory backed volumes.
    sizeLimit: # 1Gi

  # -- Create an emptyDir volume to share between all containers
  # [[ref]]https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
  # @default -- See below
  varlogs:
    # TODO: discuss if we enable it by default
    enabled: false
    type: emptyDir
    mountPath: /var/logs
    # -- Set the medium to "Memory" to mount a tmpfs (RAM-backed filesystem) instead
    # of the storage medium that backs the node.
    medium:  # Memory
    # -- If the `SizeMemoryBackedVolumes` feature gate is enabled, you can
    # specify a size for memory backed volumes.
    sizeLimit: # 1Gi

  # -- Create an emptyDir volume to share between all containers
  # [[ref]]https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
  # @default -- See below
  shared:
    # TODO: discuss if we enable it by default
    enabled: false
    type: emptyDir
    mountPath: /shared
    # -- Set the medium to "Memory" to mount a tmpfs (RAM-backed filesystem) instead
    # of the storage medium that backs the node.
    medium:  # Memory
    # -- If the `SizeMemoryBackedVolumes` feature gate is enabled, you can
    # specify a size for memory backed volumes.
    sizeLimit:  # 1Gi
