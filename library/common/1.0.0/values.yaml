# This file only includes the default values that are applied.
# All values can be overridden per chart, in their values.yaml
# For Examples and Explanation view the "Values.yaml Explained" markdown file

image:
  repository: repo
  tag: tag
  pullPolicy: IfNotPresent

imageSelector: ""

command: []

args: []

extraArgs: []

env: {}

envList: []

envFrom: []



# Everything bellow needs documentation

global:
  nameOverride: ""
  fullnameOverride: ""
  annotations: {}
  labels: {}

nameOverride: ""

fullnameOverride: ""

podAnnotations: {}

podLabels: {}

# TODO: docs
ixExternalInterfacesConfigurationNames: []
  # - interface1
  # - interface2


tty: false

stdin: false

hostname: ""

hostNetwork: false

enableServiceLinks: false

schedulerName: ""

priorityClassName: ""

dnsPolicy: ""

dnsConfig: {}

hostAliases: []

nodeSelector: {}

tolerations: []

serviceAccount:
  main:
    enabled: false
    primary: true

rbac:
  main:
    enabled: false
    primary: true
    clusterWide: false

# TODO: docs
podSecurityContext:
  runAsUser: 568
  runAsGroup: 568
  fsGroup: 568
  supplementalGroups: []
  fsGroupChangePolicy: OnRootMismatch

securityContext:
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  capabilities:
    drop: []
    add: []

lifecycle: {}

termination:
  messagePath: ""
  messagePolicy: ""
  # TODO: docs / add it to the pod
  gracePeriodSeconds: 10

# -- Set the resource requests / limits for the main container.
resources:
  limits:
    cpu: 4000m
    memory: 8Gi
  requests:
    cpu: 10m
    memory: 50Mi

# TODO: docs -- Used to add SCALE GPU configuration
# TODO: Verify that this is the correct value returned from ref
scaleGPU: {}
  # gpu: 1

nvidiaCaps:
  - all

injectFixedEnvs: true

TZ: UTC

security:
  PUID: 568
  UMASK: 002


controller:
  # -- Enable the controller.
  enabled: true
  # -- Set the controller type.
  # Valid options are: deployment | daemonset | statefulset
  type: deployment
  # -- Set labels on the deployment/statefulset/daemonset. Helm templates can be used.
  labels: {}
  # -- Set  annotations on the deployment/statefulset/daemonset. Helm templates can be used.
  annotations: {}
  # -- Revision history limit
  revisionHistoryLimit: 3
  # -- Number of desired pods
  replicas: 1
  # -- Set the controller upgrade strategy
  # For Deployments, valid values are Recreate (default) and RollingUpdate.
  # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
  # DaemonSets ignore this.
  strategy: ""
  # -- Set rollingUpdate strategies
  rollingUpdate:
    # -- Set deployment RollingUpdate max unavailable
    unavailable:
    # -- Set deployment RollingUpdate max surge
    surge:
    # -- Set statefulset RollingUpdate partition
    partition:

# -- Configure the services for the chart here.
# Additional services can be added by adding a dictionary key similar to the 'main' service.
# @default -- See below
service:
  main:
    # -- Enables or disables the service
    enabled: true
    # enabled: false
    # -- Configure the Service port information here.
    # Additional ports can be added by adding a dictionary key similar to the 'main' port.
    # @default -- See below
    ports:
      main:
        # -- Enables or disables the port
        enabled: true
        # enabled: false
        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true
        # -- The port number (Default port is required if enabled: true)
        port:
        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTPS and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP
        # -- Specify a service targetPort if you wish to differ the service port from the application port.
        # If `targetPort` is specified, this port number is used in the container definition instead of
        # the `port` value. Therefore named ports are not supported for this field.
        targetPort:
        # -- Specify the nodePort value NodePort service types.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
        nodePort:

addAnnotations:
  traefik: true
  metallb: true

probes:
  liveness:
    enabled: true
    custom: false
    type: AUTO
    path: "/"
    command: []
    httpHeaders: {}
    spec:
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
  readiness:
    enabled: true
    custom: false
    type: AUTO
    path: "/"
    command: []
    spec:
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
  startup:
    enabled: true
    custom: false
    type: AUTO
    path: "/"
    command: []
    port: ""
    spec:
      initialDelaySeconds: 10
      timeoutSeconds: 2
      periodSeconds: 5
      failureThreshold: 60

persistence: {}
# TODO: Discuss if we are going to add defaults like:
  # - /dev/shm
  # - /tmp
  # - /var/log
  # - /shared

# -- Used in conjunction with `controller.type: statefulset` to create individual disks for each instance.
volumeClaimTemplates: {}
# data:
#   mountPath: /data
#   accessMode: "ReadWriteOnce"
#   size: 1Gi
